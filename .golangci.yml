linters-settings:
  dupl:
    threshold: 100
  errcheck:
    check-type-assertions: true
    check-blank: true
  exhaustruct:
    exclude:
      - 'cobra\.Command$'
  funlen:
    lines: 110
    statements: 50
  goconst:
    min-len: 2
    min-occurrences: 4
    ignore-tests: true
    numbers: true
    ignore-calls: false
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
  gocyclo:
    min-complexity: 20
  godot:
    capital: true
  gofmt:
    rewrite-rules:
      - pattern: 'interface{}'
        replacement: 'any'
      - pattern: 'a[b:len(a)]'
        replacement: 'a[b:]'
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  golint:
    min-confidence: 0
  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  misspell:
    locale: US
  prealloc:
    for-loops: true
  rowserrcheck:
    packages:
      - github.com/jmoiron/sqlx
  usestdlibvars:
    time-month: true
    time-layout: true




linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - bidichk
    - bodyclose
    - contextcheck
    - depguard
    - dogsled
    - dupl
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustruct
    - exportloopref
    - forbidigo
    - funlen
    - gci
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - godot
    - gocyclo
    - goerr113
    - gofmt
    - goimports
    - gomnd
    - gosec
    - gosimple
    - govet
    - importas
    - ineffassign
    - interfacebloat
    - interfacer
    # - ireturn # A lot of the functions of the library need to return variables of a generic type
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - structcheck
    - stylecheck
    - tenv
    - typecheck
    - unconvert
    - unparam
    - usestdlibvars
    - unused
    - varcheck
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl

issues:
  exclude:
     - Declaration of "err" shadows declaration at line 
